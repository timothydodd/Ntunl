name: Create Release

on:
  push:
    tags:
      - "release-*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.x"

      - name: Publish NtunlClient
        run: dotnet publish src/NtunlClient/NtunlClient.csproj --configuration Release --output publish/NtunlClient

      - name: Publish NtunlHost
        run: dotnet publish src/NtunlHost/NtunlHost.csproj --configuration Release --output publish/NtunlHost

      - name: Generate NtunlClient ZIP
        run: |
          cd publish/NtunlClient
          zip -r ../../NtunlClient.zip .

      - name: Generate NtunlHost ZIP
        run: |
          cd publish/NtunlHost
          zip -r ../../NtunlHost.zip .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release notes for ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload NtunlClient Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: NtunlClient.zip
          asset_name: NtunlClient.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload NtunlHost Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: NtunlHost.zip
          asset_name: NtunlHost.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
